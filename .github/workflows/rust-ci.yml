on:
  workflow_call:
    inputs:
      aws-region:
        type: string
        default: 'eu-west-1'
      aws-role:
        type: string
        default: 'invalid'
      binary-name:
        type: string
        default: ''
      build-lambda:
        type: boolean
        default: false
      deploy-lambda:
        type: boolean
        default: false
      disable-sudo:
        type: boolean
        default: true
      egress-policy-allowlist:
        type: string
        default: ''
      rust-version:
        type: string
        default: 'stable'
      runs-on:
        type: string
        default: 'ubuntu-latest'
      upload-sarif:
        type: boolean
        default: true
      working-directory:
        type: string
        default: '.'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            index.crates.io:443
            static.crates.io:443
            static.rust-lang.org:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c # v1.15.2
        with:
          components: rustfmt
          toolchain: ${{ inputs.rust-version }}
          cache-workspaces: |-
            ${{ inputs.working-directory }}
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Build
        run: cargo build --verbose --release

  tests:
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            index.crates.io:443
            static.crates.io:443
            static.rust-lang.org:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c # v1.15.2
        with:
          toolchain: ${{ inputs.rust-version }}
          cache-workspaces: |-
            ${{ inputs.working-directory }}
      - name: Run tests
        run: cargo test --verbose

  clippy:
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      security-events: write
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            index.crates.io:443
            raw.githubusercontent.com:443
            release-assets.githubusercontent.com:443
            static.crates.io:443  
            static.rust-lang.org:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c # v1.15.2
        with:
          components: clippy
          toolchain: ${{ inputs.rust-version }}
          cache-workspaces: |-
            ${{ inputs.working-directory }}
      - run: cargo install cargo-make clippy-sarif sarif-fmt
      - name: Run clippy
        run: >
          cargo make --profile gha clippy
          | clippy-sarif
          | tee clippy-results.sarif
          | sarif-fmt
      - uses: reviewdog/action-setup@d8edfce3dd5e1ec6978745e801f9c50b5ef80252 # v1.4.0
      - name: Run reviewdog
        continue-on-error: true
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo -n "$(cat ./clippy-results.sarif)" | reviewdog -reporter=github-check -f=sarif -level=warning -diff="git diff FETCH_HEAD"
      - name: Upload results
        uses: github/codeql-action/upload-sarif@16140ae1a102900babc80a33c44059580f687047 #  v4.30.9
        with:
          sarif_file: ${{ inputs.working-directory }}/clippy-results.sarif
          category: sast
        if: ${{ inputs.upload-sarif }}

  build-and-deploy:
    if: ${{ inputs.build-lambda || inputs.deploy-lambda }}
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      id-token: write
    needs: [build, tests, clippy]
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            fs.liujiacai.net:443
            github.com:443
            index.crates.io:443
            lambda.eu-west-1.amazonaws.com:443
            objects.githubusercontent.com:443
            pkg.machengine.org:443
            static.crates.io:443
            static.rust-lang.org:443
            sts.eu-west-1.amazonaws.com:443
            zig.linus.dev:443
            ziglang.org:443
            zigmirror.hryx.net:443
            zigmirror.nesovic.dev:443
            zig.nekos.space:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: ${{ inputs.aws-role }}
          aws-region: ${{ inputs.aws-region }}
          retry-max-attempts: 2
      - name: Install Zig toolchain
        uses: mlugg/setup-zig@8d6198c65fb0feaa111df26e6b467fea8345e46f # v2.0.5
        with:
          version: latest
      - uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c # v1.15.2
        with:
          toolchain: ${{ inputs.rust-version }}
          cache-workspaces: |-
            ${{ inputs.working-directory }}
      - run: cargo install cargo-lambda
      - name: Build Lambda
        if: ${{ inputs.build-lambda || inputs.deploy-lambda }}
        run: cargo lambda build --verbose --release
      - name: Deploy Lambda
        env:
          BINARY_NAME: ${{ inputs.binary-name }}
        if: ${{ inputs.deploy-lambda }}
        run: |
          if [ -z "${BINARY_NAME}" ]; then
            cargo lambda deploy
          else
            cargo lambda deploy --binary-name "${BINARY_NAME}"
          fi

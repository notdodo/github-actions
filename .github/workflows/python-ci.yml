on:
  workflow_call:
    inputs:
      poetry-version:
        type: string
        default: "1.8.2"
      python-version:
        type: string
        default: "3.11"
      runs-on:
        type: string
        default: "ubuntu-latest"
      working-directory:
        type: string
        default: "."

jobs:
  install-and-checks:
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        # v4.2.2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b
        # v5.2.1
        with:
          python-version: ${{ inputs.python-version }}
      - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        # v4.2.0
        with:
          path: ~/.local
          key: poetry-${{ inputs.poetry-version }}
      - uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        # v1.4.1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - id: cache-deps
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        # v4.2.0
        with:
          path: ${{ inputs.working-directory }}/.venv
          key: python-${{ inputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Linting
        run: |
          make format-check
          make lint
      - name: Type checking
        run: |
          make type-check

on:
  workflow_call:
    inputs:
      disable-sudo:
        type: boolean
        default: true
      egress-policy-allowlist:
        type: string
        default: ""
      poetry-version:
        type: string
        default: "latest"
      python-version:
        type: string
        default: "3.13"
      runs-on:
        type: string
        default: "ubuntu-latest"
      working-directory:
        type: string
        default: "."

jobs:
  install-and-checks:
    permissions: {}
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49
        # v2.12.2
        with:
          disable-sudo-and-containers: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org
            github.com:443
            install.python-poetry.org:443
            objects.githubusercontent.com:443
            pypi.org:443
            release-assets.githubusercontent.com:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        # v5.6.0
        with:
          python-version: ${{ inputs.python-version }}
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        # v4.2.3
        with:
          path: ~/.local
          key: poetry-${{ inputs.poetry-version }}
      - uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        # v1.4.1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - id: cache-deps
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        # v4.2.3
        with:
          path: |
            ${{ inputs.working-directory }}/.venv
            ${{ inputs.working-directory }}/.mypy_cache
          key: python-${{ inputs.python-version }}-poetry-${{ hashFiles(format('{0}/poetry.lock', inputs.working-directory)) }}
      - run: poetry install --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611
        with:
          repo-token: ${{ github.token }}
        # v2.0.0
      - name: Linting
        run: |
          task format-check
          task lint
      - name: Type checking
        run: |
          task type-check

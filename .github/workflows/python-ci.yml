on:
  workflow_call:
    inputs:
      disable-sudo:
        type: boolean
        default: true
      egress-policy-allowlist:
        type: string
        default: ""
      poetry-version:
        type: string
        default: "latest"
      python-version:
        type: string
        default: "3.13"
      runs-on:
        type: string
        default: "ubuntu-latest"
      working-directory:
        type: string
        default: "."

jobs:
  install-and-checks:
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481
        # v2.11.0
        with:
          disable-sudo: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org
            github.com:443
            install.python-poetry.org:443
            objects.githubusercontent.com:443
            pypi.org:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
        # v5.4.0
        with:
          python-version: ${{ inputs.python-version }}
      - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf
        # v4.2.2
        with:
          path: ~/.local
          key: poetry-${{ inputs.poetry-version }}
      - uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        # v1.4.1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - id: cache-deps
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf
        # v4.2.2
        with:
          path: |
            ${{ inputs.working-directory }}/.venv
            ${{ inputs.working-directory }}/.mypy_cache
          key: python-${{ inputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Linting
        run: |
          make format-check
          make lint
      - name: Type checking
        run: |
          make type-check

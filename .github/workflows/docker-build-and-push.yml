on:
  workflow_call:
    inputs:
      disable-sudo:
        type: boolean
        default: true
      dockerfile:
        type: string
        default: "Dockerfile"
      egress-policy-allowlist:
        type: string
        default: ""
      flavor:
        type: string
        description: "Defines a global behavior for tags"
        default: |
          latest=auto
          prefix=
          suffix=
      image:
        required: true
        type: string
      labels:
        type: string
        default: ""
      platforms:
        type: string
        default: "linux/amd64"
      push:
        type: boolean
        default: false
      registry:
        type: string
        default: ""
      runs-on:
        type: string
        default: "ubuntu-latest"
      tags:
        type: string
        default: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
      working-directory:
        type: string
        default: "."
    secrets:
      registry-username:
        required: true
      registry-password:
        required: true

jobs:
  build-and-push-image:
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write
    name: Docker build and push
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481
        # v2.11.0
        with:
          disable-sudo: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            fulcio.sigstore.dev:443
            objects.githubusercontent.com:443
            mirror.gcr.io:443
            pkg-containers.githubusercontent.com:443
            rekor.sigstore.dev:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            ghcr.io:443
            github.com:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        # v4.2.2
        with:
          persist-credentials: false
      - uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25
        # v3.4.0
      - uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca
        # v3.9.0
        with:
          cache-binary: false
      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        # v3.3.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}
      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        # v5.6.1
        with:
          images: ${{ inputs.registry }}/${{ inputs.image }}
          tags: ${{ inputs.tags }}
          flavor: ${{ inputs.flavor }}
          labels: ${{ inputs.labels }}
      - name: Build and push
        id: build
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497
        # v6.14.0
        with:
          annotations: ${{ steps.metadata.outputs.annotations }}
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          load: true
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        # v0.29.0
        with:
          image-ref: ${{ steps.build.outputs.imageid }}
          format: sarif
          scan-type: image
          ignore-unfixed: 1
          output: ${{ inputs.working-directory }}/trivy_results.sarif
          github-pat: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload results
        uses: github/codeql-action/upload-sarif@3407610120cd5656b6fc71991415cb50748b9489
        # v2.20.1
        with:
          sarif_file: ${{ inputs.working-directory }}/trivy_results.sarif
      - name: Generate artifact attestation
        if: inputs.push
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4
        # v2.2.0
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.image }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

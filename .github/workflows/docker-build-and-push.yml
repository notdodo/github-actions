on:
  workflow_call:
    inputs:
      dockerfile:
        type: string
        default: "Dockerfile"
      flavor:
        type: string
        description: "Defines a global behavior for tags"
        default: |
          latest=auto
          prefix=
          suffix=
      image:
        required: true
        type: string
      labels:
        type: string
        default: ""
      platforms:
        type: string
        default: "linux/amd64"
      push:
        type: boolean
        default: false
      registry:
        type: string
        default: ""
      runs-on:
        type: string
        default: "ubuntu-latest"
      tags:
        type: string
        default: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
      working-directory:
        type: string
        default: "."
    secrets:
      registry-username:
        required: true
      registry-password:
        required: true

permissions:
  id-token: write
  packages: write
  contents: read
  attestations: write

jobs:
  build-and-push-image:
    name: Docker build and push
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        # v4.1.7

      - name: Set up QEMU
        uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee
        # v3.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb
        # v3.3.0
      - name: Log in to the Container registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        # v3.2.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}

      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        # v5.5.1
        with:
          images: ${{ inputs.registry }}/${{ inputs.image }}
          tags: ${{ inputs.tags }}
          flavor: ${{ inputs.flavor }}
          labels: ${{ inputs.labels }}

      - name: Build and push
        id: push
        uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c
        # v6.3.0
        with:
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate artifact attestation
        if: inputs.push
        uses: actions/attest-build-provenance@bdd51370e0416ac948727f861e03c2f05d32d78e
        # v1.3.2
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.image }}
          subject-digest: ${{ steps.push.outputs.digest }}

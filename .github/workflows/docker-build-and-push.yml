on:
  workflow_call:
    inputs:
      disable-sudo:
        type: boolean
        default: true
      dockerfile:
        type: string
        default: "Dockerfile"
      egress-policy-allowlist:
        type: string
        default: ""
      flavor:
        type: string
        description: "Defines a global behavior for tags"
        default: |
          latest=auto
          prefix=
          suffix=
      image:
        required: true
        type: string
      platforms:
        type: string
        default: "linux/amd64,linux/arm64"
      push:
        type: boolean
        default: false
      registry:
        type: string
        default: ""
      runs-on:
        type: string
        default: "ubuntu-latest"
      tags:
        type: string
        default: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
      upload-sarif:
        type: boolean
        default: true
      working-directory:
        type: string
        default: "."
    secrets:
      registry-username:
        required: true
      registry-password:
        required: true

jobs:
  build-and-push-image:
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write
    name: Docker build and push
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0
        # v2.12.0
        with:
          disable-sudo: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            fulcio.sigstore.dev:443
            objects.githubusercontent.com:443
            mirror.gcr.io:443
            pkg-containers.githubusercontent.com:443
            rekor.sigstore.dev:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            ghcr.io:443
            github.com:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        # v4.2.2
        with:
          persist-credentials: false
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
        # v3.6.0
      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2
        # v3.10.0
        with:
          cache-binary: false
      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        # v3.4.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}
      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        # v5.7.0
        with:
          images: ${{ inputs.registry }}/${{ inputs.image }}
          tags: ${{ inputs.tags }}
          flavor: ${{ inputs.flavor }}
      - name: Build and push
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        # v6.18.0
        with:
          annotations: ${{ steps.metadata.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          provenance: mode=max
          push: ${{ inputs.push }}
          tags: ${{ steps.metadata.outputs.tags }}
      - name: Generate artifact attestation
        if: inputs.push
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd
        # v2.3.0
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.image }}
          subject-digest: ${{ steps.build.outputs.imageid }}
          push-to-registry: true

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37
        # v0.31.0
        with:
          format: sarif
          ignore-unfixed: true
          image-ref: ${{ inputs.registry }}/${{ inputs.image }}
          output: ${{ inputs.working-directory }}/trivy_results.sarif
          github-pat: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload results
        uses: github/codeql-action/upload-sarif@3407610120cd5656b6fc71991415cb50748b9489
        # v2.20.1
        with:
          sarif_file: ${{ inputs.working-directory }}/trivy_results.sarif
          category: container-security
        if: ${{ inputs.upload-sarif }}

on:
  workflow_call:
    inputs:
      dockerfile:
        type: string
        default: "Dockerfile"
      flavor:
        type: string
        description: "Defines a global behavior for tags"
        default: |
          latest=auto
          prefix=
          suffix=
      image:
        required: true
        type: string
      labels:
        type: string
        default: ""
      platforms:
        type: string
        default: "linux/amd64"
      push:
        type: boolean
        default: false
      registry:
        type: string
        default: ""
      runs-on:
        type: string
        default: "ubuntu-latest"
      tags:
        type: string
        default: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
      working-directory:
        type: string
        default: "."
    secrets:
      registry-username:
        required: true
      registry-password:
        required: true

permissions:
  id-token: write
  packages: write
  contents: read
  attestations: write
  security-events: write

jobs:
  build-and-push-image:
    name: Docker build and push
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf
        # v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349
        # v3.7.1
      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        # v3.3.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}

      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        # v5.6.1
        with:
          images: ${{ inputs.registry }}/${{ inputs.image }}
          tags: ${{ inputs.tags }}
          flavor: ${{ inputs.flavor }}
          labels: ${{ inputs.labels }}

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        # v0.29.0
        with:
          image-ref: ${{ inputs.registry }}/${{ inputs.image }}
          format: sarif
          ignore-unfixed: 1
          output: ${{ inputs.working-directory }}/trivy_results.sarif
          github-pat: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload sarif
        uses: github/codeql-action/upload-sarif@5618c9fc1e675841ca52c1c6b1304f5255a905a0
        # v2.19.0
        with:
          sarif_file: ${{ inputs.working-directory }}/trivy_results.sarif

      - name: Build and push
        id: push
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
        # v6.10.0
        with:
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        if: inputs.push
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb
        # v2.1.0
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.image }}
          subject-digest: ${{ steps.push.outputs.digest }}

on:
  workflow_call:
    inputs:
      aws-role:
        type: string
        default: ""
      aws-region:
        type: string
        default: eu-west-1
      aws-secrets-mapping:
        type: string
        default: ""
      disable-sudo:
        type: boolean
        default: true
      egress-policy-allowlist:
        type: string
        default: ""
      poetry-version:
        type: string
        default: "latest"
      python-version:
        type: string
        default: "3.13"
      runs-on:
        type: string
        default: "ubuntu-latest"
      stack-name:
        type: string
        default: ""
      working-directory:
        type: string
        default: "."

concurrency:
  group: ghas-${{ github.repository }}-pulumi-up-${{ github.ref }}
  cancel-in-progress: false

jobs:
  pulumi-up:
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ inputs.runs-on }}
    env:
      PULUMI_HOME: ${{ github.workspace }}/.pulumi
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        # v2.13.0
        with:
          disable-sudo-and-containers: ${{ inputs.disable-sudo }}
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            api.pulumi.com:443
            files.pythonhosted.org:443
            github.com:443
            install.python-poetry.org:443
            objects.githubusercontent.com:443
            pypi.org:443
            release-assets.githubusercontent.com:443
            *.${{ inputs.aws-region }}.amazonaws.com:443
            ${{ inputs.egress-policy-allowlist }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        # v5.6.0
        with:
          python-version: ${{ inputs.python-version }}

      # ----- Poetry -----
      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        if: ${{ hashFiles(format('{0}/poetry.lock', inputs.working-directory)) != '' }}
        # v4.2.4
        with:
          path: ~/.local/bin/
          key: poetry-${{ inputs.poetry-version }}
      - uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        if: ${{ hashFiles(format('{0}/poetry.lock', inputs.working-directory)) != '' }}
        # v1.4.1
        with:
          version: ${{ inputs.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # ----- UV -----
      - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b
        # v6.6.0
        if: ${{ hashFiles(format('{0}/uv.lock', inputs.working-directory)) != '' }}
        # v6.5.0
        with:
          enable-cache: true
      - id: cache-deps
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        # v4.2.4
        with:
          path: |
            ${{ inputs.working-directory }}/.venv
            ${{ inputs.working-directory }}/.mypy_cache
            ~/.local/.cache/uv
          key: python-${{ inputs.python-version }}-venv-${{ hashFiles(format('{0}/poetry.lock', inputs.working-directory), format('{0}/uv.lock', inputs.working-directory)) }}
      - run: poetry sync --no-root
        if: ${{ steps.cache-deps.outputs.cache-hit != 'true' && hashFiles(format('{0}/poetry.lock', inputs.working-directory)) != '' }}
      - run: uv sync --locked --all-extras --dev
        if: ${{ steps.cache-deps.outputs.cache-hit != 'true' && hashFiles(format('{0}/uv.lock', inputs.working-directory)) != '' }}
      - uses: pulumi/auth-actions@1c89817aab0c66407723cdef72b05266e7376640
        # v1.0.1
        with:
          organization: notdodo
          # kics-scan ignore-line
          requested-token-type: urn:pulumi:token-type:access_token:personal
          scope: user:notdodo
      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        # v4.2.4
        with:
          path: ${{ env.PULUMI_HOME }}/plugins
          key: python-${{ inputs.python-version }}-venv-${{ hashFiles(format('{0}/poetry.lock', inputs.working-directory), format('{0}/uv.lock', inputs.working-directory)) }}
      - uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a
        # v4.3.1
        if: ${{ inputs.aws-role != '' }}
        with:
          role-to-assume: ${{ inputs.aws-role }}
          aws-region: ${{ inputs.aws-region }}
          retry-max-attempts: 2
      - uses: aws-actions/aws-secretsmanager-get-secrets@a9a7eb4e2f2871d30dc5b892576fde60a2ecc802
        # v2.0.10
        if: ${{ inputs.aws-role != '' }}
        with:
          secret-ids: >
            ${{ inputs.aws-secrets-mapping }}
      - uses: pulumi/actions@cc7494be991dba0978f7ffafaf995b0449a0998e
        # v6.5.0
        with:
          command: up
          stack-name: ${{ inputs.stack-name }}
          diff: true
          work-dir: ${{ inputs.working-directory }}
          comment-on-pr: true
          color: always
          suppress-progress: true
          always-include-summary: true
